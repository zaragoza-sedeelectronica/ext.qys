/* Copyright (C) 2020 Oficina Técnica de Participación, Transparenica y Gobierno Abierto del Ayuntamiento de Zaragoza
 * 
 * Este fichero es parte del "Quejas y Sugerencias - Open City Zaragoza".
 *
 * "Quejas y Sugerencias - Open City Zaragoza" es un software libre; usted puede utilizar esta obra respetando la licencia GNU General Public License, versión 3 o posterior, publicada por Free Software Foundation
 *
 * Salvo cuando lo exija la legislación aplicable o se acuerde por escrito, el programa distribuido con arreglo a la Licencia se distribuye «TAL CUAL», SIN GARANTÍAS NI CONDICIONES DE NINGÚN TIPO, ni expresas ni implícitas.
 * Véase la Licencia en el idioma concreto que rige los permisos y limitaciones que establece la Licencia. 
 *
 * Para más información, puede contactar con los autores en: gobiernoabierto@zaragoza.es, sedelectronica@zaragoza.es
 */

package org.sede.servicio.qys.entity.db;
// Generated 17-jul-2019 8:10:17 by Hibernate Tools 4.3.5.Final

import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;

import org.sede.core.anotaciones.SoloEnEstaEntidad;
import org.sede.servicio.qys.ConfigQys;

/**
 * Hbcategoryscalinggroups generated by hbm2java
 */
@XmlRootElement(name="scaling-group")
@Entity
@Table(name = "HBCATEGORYSCALINGGROUPS", schema = ConfigQys.ESQUEMA)
public class Hbcategoryscalinggroups implements java.io.Serializable {

	@SoloEnEstaEntidad
	private HbcategoryscalinggroupsId id;
	@SoloEnEstaEntidad
	private Hbcategories hbcategories;
	private BigDecimal csgPriority;

	public Hbcategoryscalinggroups() {
	}

	public Hbcategoryscalinggroups(HbcategoryscalinggroupsId id, Hbcategories hbcategories, BigDecimal csgPriority) {
		this.id = id;
		this.hbcategories = hbcategories;
		this.csgPriority = csgPriority;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "sgpHbid", column = @Column(name = "SGP_HBID", nullable = false, precision = 22, scale = 0)),
			@AttributeOverride(name = "catHbid", column = @Column(name = "CAT_HBID", nullable = false, precision = 22, scale = 0)) })
	public HbcategoryscalinggroupsId getId() {
		return this.id;
	}

	public void setId(HbcategoryscalinggroupsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAT_HBID", nullable = false, insertable = false, updatable = false)
	public Hbcategories getHbcategories() {
		return this.hbcategories;
	}

	public void setHbcategories(Hbcategories hbcategories) {
		this.hbcategories = hbcategories;
	}

	@Column(name = "CSG_PRIORITY", nullable = false, precision = 22, scale = 0)
	public BigDecimal getCsgPriority() {
		return this.csgPriority;
	}

	public void setCsgPriority(BigDecimal csgPriority) {
		this.csgPriority = csgPriority;
	}

}
