<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="es" xmlns:sede="http://www.zaragoza.es" xmlns:th="http://www.thymeleaf.org">

<head>
    <meta charset="utf-8" />
    <sede:meta title="Indicadores Económicos Financieros" keywords="sede,web,Morosidad,Proveedores,ayuntamiento,zaragoza,contratación" />
    <style>
        .label-success {
        border: 0;
        color: #fff;
        background-color: #008A00;
        }
        .pratios{
        float:left;
        }
        .ratios{
            float:left;
            font-weight: bold;
        }
        th{
        text-align:center;
        }
        #BuscadorAvanzado{
        background: #E6E6E6;
        border-radius: .5em;
        padding: .5em;
        border: 1px solid #CCC;
        margin-bottom: 1em;
        padding: 20px;
        }
        .second-bar {
        background: #E6E6E6;
        border-radius: .5em;
        padding: .5em;
        border: 1px solid #CCC;
        margin-bottom: 1em;
        }
        .title{
        color:#D01714;
        }
        .list-unstyled {
        clear: both;
        }
        .slider {
        display: inline-block;
        vertical-align: middle;
        position: relative;
        }
        .slider.slider-horizontal {
        width: 210px;
        height: 20px;
        }
        .slider.slider-horizontal .slider-track {
        height: 10px;
        width: 100%;
        margin-top: -5px;
        top: 50%;
        left: 0;
        }
        .slider.slider-horizontal .slider-selection,
        .slider.slider-horizontal .slider-track-low,
        .slider.slider-horizontal .slider-track-high {
        height: 100%;
        top: 0;
        bottom: 0;
        }
        .slider.slider-horizontal .slider-tick,
        .slider.slider-horizontal .slider-handle {
        margin-left: -10px;
        }
        .slider.slider-horizontal .slider-tick.triangle,
        .slider.slider-horizontal .slider-handle.triangle {
        position: relative;
        top: 50%;
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
        border-width: 0 10px 10px 10px;
        width: 0;
        height: 0;
        border-bottom-color: #2e6da4;
        margin-top: 0;
        }
        .slider.slider-horizontal .slider-tick-container {
        white-space: nowrap;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        }
        .slider.slider-horizontal .slider-tick-label-container {
        white-space: nowrap;
        margin-top: 20px;
        }
        .slider.slider-horizontal .slider-tick-label-container .slider-tick-label {
        padding-top: 4px;
        display: inline-block;
        text-align: center;
        }
        .slider.slider-horizontal .tooltip {
        -ms-transform: translateX(-50%);
        transform: translateX(-50%);
        }
        .slider.slider-horizontal.slider-rtl .slider-track {
        left: initial;
        right: 0;
        }
        .slider.slider-horizontal.slider-rtl .slider-tick,
        .slider.slider-horizontal.slider-rtl .slider-handle {
        margin-left: initial;
        margin-right: -10px;
        }
        .slider.slider-horizontal.slider-rtl .slider-tick-container {
        left: initial;
        right: 0;
        }
        .slider.slider-horizontal.slider-rtl .tooltip {
        -ms-transform: translateX(50%);
        transform: translateX(50%);
        }
        .slider.slider-vertical {
        height: 210px;
        width: 20px;
        }
        .slider.slider-vertical .slider-track {
        width: 10px;
        height: 100%;
        left: 25%;
        top: 0;
        }
        .slider.slider-vertical .slider-selection {
        width: 100%;
        left: 0;
        top: 0;
        bottom: 0;
        }
        .slider.slider-vertical .slider-track-low,
        .slider.slider-vertical .slider-track-high {
        width: 100%;
        left: 0;
        right: 0;
        }
        .slider.slider-vertical .slider-tick,
        .slider.slider-vertical .slider-handle {
        margin-top: -10px;
        }
        .slider.slider-vertical .slider-tick.triangle,
        .slider.slider-vertical .slider-handle.triangle {
        border-width: 10px 0 10px 10px;
        width: 1px;
        height: 1px;
        border-left-color: #2e6da4;
        border-right-color: #2e6da4;
        margin-left: 0;
        margin-right: 0;
        }
        .slider.slider-vertical .slider-tick-label-container {
        white-space: nowrap;
        }
        .slider.slider-vertical .slider-tick-label-container .slider-tick-label {
        padding-left: 4px;
        }
        .slider.slider-vertical .tooltip {
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
        }
        .slider.slider-vertical.slider-rtl .slider-track {
        left: initial;
        right: 25%;
        }
        .slider.slider-vertical.slider-rtl .slider-selection {
        left: initial;
        right: 0;
        }
        .slider.slider-vertical.slider-rtl .slider-tick.triangle,
        .slider.slider-vertical.slider-rtl .slider-handle.triangle {
        border-width: 10px 10px 10px 0;
        }
        .slider.slider-vertical.slider-rtl .slider-tick-label-container .slider-tick-label {
        padding-left: initial;
        padding-right: 4px;
        }
        .slider.slider-disabled .slider-handle {
        background-image: -webkit-linear-gradient(top, #dfdfdf 0%, #bebebe 100%);
        background-image: -o-linear-gradient(top, #dfdfdf 0%, #bebebe 100%);
        background-image: linear-gradient(to bottom, #dfdfdf 0%, #bebebe 100%);
        background-repeat: repeat-x;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdfdfdf', endColorstr='#ffbebebe', GradientType=0);
        }
        .slider.slider-disabled .slider-track {
        background-image: -webkit-linear-gradient(top, #e5e5e5 0%, #e9e9e9 100%);
        background-image: -o-linear-gradient(top, #e5e5e5 0%, #e9e9e9 100%);
        background-image: linear-gradient(to bottom, #e5e5e5 0%, #e9e9e9 100%);
        background-repeat: repeat-x;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffe5e5e5', endColorstr='#ffe9e9e9', GradientType=0);
        cursor: not-allowed;
        }
        .slider input {
        display: none;
        }
        .slider .tooltip {
        pointer-events: none;
        }
        .slider .tooltip.top {
        margin-top: -36px;
        }
        .slider .tooltip-inner {
        white-space: nowrap;
        max-width: none;
        }
        .slider .hide {
        display: none;
        }
        .slider-track {
        position: absolute;
        cursor: pointer;
        background-image: -webkit-linear-gradient(top, #f5f5f5 0%, #f9f9f9 100%);
        background-image: -o-linear-gradient(top, #f5f5f5 0%, #f9f9f9 100%);
        background-image: linear-gradient(to bottom, #f5f5f5 0%, #f9f9f9 100%);
        background-repeat: repeat-x;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#fff9f9f9', GradientType=0);
        -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        border-radius: 4px;
        }
        .slider-selection {
        position: absolute;
        background-image: -webkit-linear-gradient(top, #f9f9f9 0%, #f5f5f5 100%);
        background-image: -o-linear-gradient(top, #f9f9f9 0%, #f5f5f5 100%);
        background-image: linear-gradient(to bottom, #f9f9f9 0%, #f5f5f5 100%);
        background-repeat: repeat-x;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff9f9f9', endColorstr='#fff5f5f5', GradientType=0);
        -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
        box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        border-radius: 4px;
        }
        .slider-selection.tick-slider-selection {

        }
        .slider-track-low,
        .slider-track-high {
        position: absolute;
        background: transparent;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        border-radius: 4px;
        }
        .slider-handle {
        position: absolute;
        top: 0;
        width: 20px;
        height: 20px;
        background-color: #E81B16;
        background-image: -webkit-linear-gradient(top, #E81B16 0%, #E81B16 100%);
        background-image: -o-linear-gradient(top, #E81B16 0%, #E81B16 100%);
        background-image: linear-gradient(to bottom, #E81B16 0%, #E81B16 100%);
        background-repeat: repeat-x;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff337ab7', endColorstr='#ff2e6da4', GradientType=0);
        filter: none;
        -webkit-box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);
        box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);
        border: 0px solid transparent;
        }
        .slider-handle:hover {
        cursor: pointer;
        }
        .slider-handle.round {
        border-radius: 50%;
        }
        .slider-handle.triangle {
        background: transparent none;
        }
        .slider-handle.custom {
        background: transparent none;
        }
        .slider-handle.custom::before {
        line-height: 20px;
        font-size: 20px;
        content: '\2605';
        color: #726204;
        }
        .slider-tick {
        position: absolute;
        cursor: pointer;
        width: 20px;
        height: 20px;
        background-image: -webkit-linear-gradient(top, #f9f9f9 0%, #f5f5f5 100%);
        background-image: -o-linear-gradient(top, #f9f9f9 0%, #f5f5f5 100%);
        background-image: linear-gradient(to bottom, #f9f9f9 0%, #f5f5f5 100%);
        background-repeat: repeat-x;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff9f9f9', endColorstr='#fff5f5f5', GradientType=0);
        -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
        box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        filter: none;
        opacity: 0.8;
        border: 0px solid transparent;
        }
        .slider-tick.round {
        border-radius: 50%;
        }
        .slider-tick.triangle {
        background: transparent none;
        }
        .slider-tick.custom {
        background: transparent none;
        }
        .slider-tick.custom::before {
        line-height: 20px;
        font-size: 20px;
        content: '\2605';
        color: #726204;
        }
        .slider-tick.in-selection {

        }
    </style>
</head>
    <body>
        <sede:content>
            <th:block th:include="fragmentos/error" />
            <div th:if="${resultado.statusCode.value()} == 200" th:object="${resultado.body}" vocab="http://schema.org/">
                <header class="header">
                    <h2 class="title" >Indicadores Económicos Financieros</h2>
                    <span th:each="indicador:${resultado.body.result}">
                     <input type="hidden" id="anyoSlider" th:value="${indicador.ejercicio}"/>
                     </span>
                </header>
            <form id="BuscadorAvanzado" method="get">
                <div class="form-group col-md-9">
                    <label for="anyo" class="control-label col-md-3"> Ejercicio:</label>
                    <input id="anyo" name="ejercicio" type="text" />
                </div>
                <div class="form-group col-md-3 buscar">
                    <input type="submit" id="enviar" value="Consultar"
                           class="btn btn-primary"></input>
                </div>
                <div class="clearfix"></div>
            </form>
            <div class="second-bar clearfix">
                <div class="col-md-6">
                    <div class="solr-search-criteria">
                        <strong>Criterios aplicados:</strong>
                        <ul th:if="${#httpServletRequest.getQueryString() != null}" class="list-inline margin-a1em">
                            <li th:if="${#httpServletRequest.getParameter('ejercicio')!='' and #httpServletRequest.getParameter('ejercicio')!=null}" th:text="'Ejercicio: '+${#httpServletRequest.getParameter('ejercicio')}" class="label label-success">En licitación</li>

                        </ul>
                        <ul th:if="${#httpServletRequest.getQueryString() == null}" class="list-inline margin-a1em">
                            <li th:each="indicador:${resultado.body.result}" th:text="'Ejercicio: '+${indicador.ejercicio}" class="label label-success"></li>

                        </ul>
                    </div>
                </div>
                <div class="col-md-6 clearfix">
                    <p class="nomargin destacado text-right">
                        Disponible en
                        <a href="https://www.zaragoza.es/sede/servicio/catalogo/2200">Datos Abiertos</a>
                    </p>
                    <ul class="list-inline pull-right">
                        <li class="nopadding">
                            <a th:href="'/sede/servicio/presupuesto/indicadores/economicos-financieros.json?' + ${#httpServletRequest.getQueryString() != null ? #httpServletRequest.getQueryString()  :  ''}">
                                JSON
                            </a>                                |
                        </li>
                        <li class="nopadding">
                            <a th:href="'/sede/servicio/indicadores/economicos-financieros.xml?' + ${#httpServletRequest.getQueryString() != null ? #httpServletRequest.getQueryString()  :  ''}">
                                XML
                            </a>
                            |
                        </li>
                        <li class="nopadding">
                            <a th:href="'/sede/servicio/indicadores/economicos-financieros.csv?' + ${#httpServletRequest.getQueryString() != null ? #httpServletRequest.getQueryString()  :  ''}">
                                CSV
                            </a>
                        </li>
                    </ul>
                </div>
                <div class=""  th:each="indicador:${resultado.body.result}">
                    <header>
                        <h2 class="title" th:text="'Ejercicio '+${indicador.ejercicio}"></h2>
                       
                    </header>
                    <div class="table-responsive">
                    <table class="table card table-striped table-condensed table-bordered" summary="Indicadores Contables">
                        <thead>
                            <tr><th>Concepto/Valor</th><th>Evolución</th></tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong>Liquidez Inmediata</strong> <br/>(Fondos líquidos / Pasivo corriente )
                                    <br/><span th:text="${#numbers.formatDecimal(indicador.fondosLiquidos,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.fondosLiquidos/indicador.pasivoCorriente)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosLiquidezInmediata" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.liquidezInmediata}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartLiquidezInmediata"></div>
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Liquidez a corto plazo</strong><br/>( Fondos líquidos+ Derechos pendientes cobro)/ Pasivo corriente
                                    <br/> <span th:text="'('+${#numbers.formatDecimal(indicador.fondosLiquidos,3,'POINT',2,'COMMA')}+' + '+${#numbers.formatDecimal(indicador.derechoPenCobro,3,'POINT',2,'COMMA')}+') / '+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.fondosLiquidos+indicador.derechoPenCobro)/indicador.pasivoCorriente}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosLiquidezCorto" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.liquidezCorto}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartliquidezCorto"></div>
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Liquidez General</strong>  <br/>(Activo Corriente
                                / Pasivo corriente )
                                    <br/>  <span th:text="${#numbers.formatDecimal(indicador.activoCorriente,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${indicador.activoCorriente/indicador.pasivoCorriente}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosLiquidezGeneral" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.liquidezGeneral}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartliquidezGeneral"></div>
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Endeudamiento por habitante</strong><br/>( Pasivo corriente + Pasivo no corriente ) / Número de habitantes
                                    <br/> <span th:text="'('+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+'+'+${#numbers.formatDecimal(indicador.pasivoNoCorriente,3,'POINT',2,'COMMA')}+') / '+${#numbers.formatDecimal(indicador.numHabitantes,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.pasivoCorriente+indicador.pasivoNoCorriente)/indicador.numHabitantes}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}+' euros'"></span></strong></td>
                                <td>
                                    <div id="datosEndeudamientoHabitante" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.endeudamientoHabitante}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartEndeudadmientoHabitante"></div>
                                </td>

                            </tr>
                            <tr>
                                <td><strong>Endeudamiento</strong>
                                <br/>( Pasivo corriente + Pasivo no corriente) / ( Pasivo corriente + Pasivo no corriente + Patrimonio neto)
                                    <br/>  <span th:text="'('+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+'+'+${#numbers.formatDecimal(indicador.pasivoNoCorriente,3,'POINT',2,'COMMA')}+') / ('+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+' + '+${#numbers.formatDecimal(indicador.pasivoNoCorriente,3,'POINT',2,'COMMA')}+' + '+${#numbers.formatDecimal(indicador.patrimonio,3,'POINT',2,'COMMA')}+') = '"></span><strong><span th:with="resultado=${(indicador.pasivoCorriente+indicador.pasivoNoCorriente)/(indicador.pasivoCorriente+indicador.pasivoNoCorriente+indicador.patrimonio)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosEndeudamiento" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.endeudamiento}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartEndeudadmiento"></div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>Relación de endeudamiento</strong>
                                <br/> ( Pasivo corriente / Pasivo no corriente )
                                    <br/>  <span th:text="${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.pasivoNoCorriente,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${indicador.pasivoCorriente/indicador.pasivoNoCorriente}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosEndeudamientoRelacion" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.relacionEndeudamiento}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartRelacion"></div>

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>Cash-flow</strong> <br/> ( Pasivo corriente + Pasivo no corriente ) / Flujos netos de gestion)
                                    <br/> <span th:text="'('+${#numbers.formatDecimal(indicador.pasivoCorriente,3,'POINT',2,'COMMA')}+' + '+${#numbers.formatDecimal(indicador.pasivoNoCorriente,3,'POINT',2,'COMMA')}+') / '+${#numbers.formatDecimal(indicador.flujo,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.pasivoCorriente+indicador.pasivoNoCorriente)/indicador.flujo}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosCashflow" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.cashFlow}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartCash"></div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>Periodo medio de pago a acreedores comerciales</strong>
                                    <br/> SUMA(Días periodo pago x Importe pago ) / Importe pago
                                    <br/> <span th:text="${#numbers.formatDecimal(indicador.sumDiasPago,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.importePago,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.sumDiasPago/indicador.importePago)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosProveedores" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.acreedores}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartProveedores"></div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>Periodo medio de cobro</strong>
                                    <br/>SUMA(Días periodo cobro x Importe cobro ) / Importe cobro)
                                    <br/> <span th:text="${#numbers.formatDecimal(indicador.sumDiasCobro,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.importeCobro,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.sumDiasCobro/indicador.importeCobro)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosPmc" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.pmc}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartPmc"></div>

                                </td>
                            </tr>
                                <tr>
                                    <th colspan="2">Ratios de la cuenta económico patrimonial <br/>1) Estructura de los ingresos de gestión ordinaria (IGOR)
                                </th>
                            </tr>
                            <tr>
                                <td id="datosIgor">Ingresos tribut.y urban./ Total IGOR
                                    <br/><p class="pratios" th:text="${#numbers.formatDecimal(indicador.ingresosTributos,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalIgor,3,'POINT',2,'COMMA')}+' = '"></p>
                                    <span class="ratios" id="Ingresos tribut.y urban./ Total IGOR" th:with="resultado=${(indicador.ingresosTributos/indicador.totalIgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>
                                <td rowspan="4">
                                    <div id="chartIgor"></div>
                                </td>
                            </tr>
                            <tr>
                                <td id="datosIgor">Transf.y subv.recibidas / Total IGOR
                                    <br/>  <p class="pratios" th:text="${#numbers.formatDecimal(indicador.transSubvenRecibidas,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalIgor,3,'POINT',2,'COMMA')}+' = '"></p>
                                    <span  class="ratios" id="Transf.y subv.recibidas / Total IGOR" th:with="resultado=${(indicador.transSubvenRecibidas/indicador.totalIgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>

                            </tr>
                            <tr>
                                <td id="datosIgor">
                                    Ventas y prestación srv. / Total IGOR
                                    <br/> <p class="pratios" th:text="${#numbers.formatDecimal(indicador.ventasPrestacion,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalIgor,3,'POINT',2,'COMMA')}+' = '"></p>
                                    <span class="ratios" id="Ventas y prestación srv. / Total IGOR" th:with="resultado=${(indicador.ventasPrestacion/indicador.totalIgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>

                            </tr>
                            <tr>
                                <td id="datosIgor">
                                    Resto IGOR / Total IGOR
                                    <br/><p class="pratios" th:text="${#numbers.formatDecimal(indicador.restoIgor,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalIgor,3,'POINT',2,'COMMA')}+' = '"></p>
                                    <span class="ratios" id=" Resto IGOR / Total IGOR" th:with="resultado=${(indicador.restoIgor/indicador.totalIgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>

                            </tr>
                            <tr>
                                <th colspan="2">Ratios de la cuenta económico patrimonial <br/>2 )Estructura de los gastos de gestión ordinaria (GGOR)</th>
                            </tr>
                            <tr>
                                <td id="datosGgor">
                                    Gastos de personal / Total GGOR
                                    <br/>  <p class="pratios" th:text="${#numbers.formatDecimal(indicador.gastosPersonal,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalGgor,3,'POINT',2,'COMMA')}+' = '"></p>
                                    <span class="ratios"  id="Gastos de personal/Total GGOR" th:with="resultado=${(indicador.gastosPersonal/indicador.totalGgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>
                                <td rowspan="4">
                                    <div id="chartGgor"></div>
                                </td>
                               </tr>
                            <tr>
                                <td id="datosGgor">
                                    Transf.y subv.concedidas / Total GGOR
                                    <br/> <p class="pratios" th:text="${#numbers.formatDecimal(indicador.transSubvenConcedidas,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalGgor,3,'POINT',2,'COMMA')}+' = '"></p><span class="ratios" id="Transf.ysubv.concedidas/Total GGOR" th:with="resultado=${(indicador.transSubvenConcedidas/indicador.totalGgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>

                               </tr>
                            <tr>
                                <td id="datosGgor">
                                    Aprovisionamientos / Total GGOR
                                    <br/> <p class="pratios" th:text="${#numbers.formatDecimal(indicador.aprovisionamiento,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalGgor,3,'POINT',2,'COMMA')}+' = '"></p><span class="ratios"  id="Aprovisionamientos/Total GGOR" th:with="resultado=${(indicador.aprovisionamiento/indicador.totalGgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>

                            </tr>
                            <tr>
                                <td id="datosGgor">
                                    Resto GGOR / Total GGOR
                                    <br/>  <p class="pratios" th:text="${#numbers.formatDecimal(indicador.restoGgor,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.totalGgor,3,'POINT',2,'COMMA')}+' = '"></p><span class="ratios"  id="Resto GGOR/Total GGOR" th:with="resultado=${(indicador.restoGgor/indicador.totalGgor)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span>
                                </td>

                            </tr>
                            <tr>
                                <th colspan="2">Ratios de la cuenta económico patrimonial <br/>3) Cobertura de los gastos corrientes</th>
                            </tr>
                            <tr>
                                <td>
                                    Gastos gestión ordinaria / Ingresos gestión ordinaria
                                    <br/> <span th:text="${#numbers.formatDecimal(indicador.gastoGestion,3,'POINT',2,'COMMA')}+' / '+${#numbers.formatDecimal(indicador.ingresosGestion,3,'POINT',2,'COMMA')}+' = '"></span><strong><span th:with="resultado=${(indicador.gastoGestion/indicador.ingresosGestion)}" th:text="${#numbers.formatDecimal(resultado,1,2,'COMMA')}"></span></strong>
                                </td>
                                <td>
                                    <div id="datosCobertura" th:each="datos:${grafico.body.result}">
                                        <span th:each="item:${datos.cobertura}"> <input type="hidden" th:value="${item}"></input></span>
                                    </div>
                                    <div id="chartCobertura"></div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    </div>
                </div>
            </div>
        </div>
        </sede:content>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js"></script>
        <script type="text/javascript" src="https://www.zaragoza.es/cont/assets/less/bootstrap-slider-master/dist/bootstrap-slider.min.js"></script>
        <script type="text/javascript" src="https://www.zaragoza.es/cont/assets/lib/bootstrap-3.3.7/js/bootstrap.min.js"></script>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            /*<![CDATA[*/
             $(document).ready(function() {
				  valueInicial=$('#anyoSlider').val();
                var d = new Date();
                actual= d.getFullYear();
                var slider = new Slider("#anyo", {
                ticks: [actual-4,actual-3,actual-2,actual-1],
                ticks_labels: [actual-4,actual-3,actual-2,actual-1],
                ticks_snap_bounds: 20,
                 value:valueInicial,
                });
              });
             /*]]>*/
        </script>
        <script type="text/javascript">
            /*<![CDATA[*/
    window.onload = function () {
         datosAntes=[];
         datosDespues=[];
        
        var fecha = new Date();
        var anyoActual = fecha.getFullYear();
        var mesActual=fecha.getMonth();
        itemHabitante=$("#datosEndeudamientoHabitante input");
        itemLiquidezInmediata=$("#datosLiquidezInmediata input");
        itemLiquidezGeneral=$("#datosLiquidezGeneral input");
        itemLiquidezCorto=$("#datosLiquidezCorto input");
        itemEndeudamiento=$("#datosEndeudamiento input");
        itemRelacion=$("#datosEndeudamientoRelacion input");
        itemCash=$("#datosCashflow input");
        itemProveedores=$("#datosProveedores input");
        itemPmc=$("#datosPmc input");
        itemCobertura=$("#datosCobertura input");
        itemIgor=$('#datosIgor span ');
        itemGgor=$('#datosGgor span');
        if(itemIgor.length>0){
             google.charts.load('current', {'packages':['corechart'],'language': 'es'});
             google.charts.setOnLoadCallback(drawChart11);
        }
        if(itemGgor.length>0){
             google.charts.load('current', {'packages':['corechart'],'language': 'es'});
             google.charts.setOnLoadCallback(drawChart12);
         }

        if(itemHabitante.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart1);
         }
         if(itemLiquidezInmediata.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart2);
         }
         if(itemLiquidezGeneral.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart3);
         }
         if(itemEndeudamiento.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart4);
         }
         if(itemLiquidezCorto.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart5);
         }
          if(itemRelacion.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart6);
         }
          if(itemCash.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart7);
         }
          if(itemProveedores.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart8);
         }
          if(itemPmc.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart9);
         }
         if(itemCobertura.length>0){
         google.charts.load('current', {'packages':['corechart'],'language': 'es'});
         google.charts.setOnLoadCallback(drawChart10);
         }
    }
    function drawChart10(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Cobertura de los gastos corrientes');
         for (var i=0;i < itemCobertura.length;i++){
      // console.log(itemCobertura[i].defaultValue);
        var datos=(itemCobertura[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
       //console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
            count: 30,
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartCobertura'));
       chart.draw(data, options);
    }
    function drawChart1(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Endeudamiento por Habitante');
         for (var i=0;i < itemHabitante.length;i++){
      // console.log(itemHabitante[i].defaultValue);
        var datos=(itemHabitante[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
            count: 30,
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},
            minValue: 500
          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartEndeudadmientoHabitante'));
       chart.draw(data, options);
    }
    function drawChart2(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Liquidez Inmediata');
         for (var i=0;i < itemLiquidezInmediata.length;i++){
      // console.log(itemLiquidezInmediata[i].defaultValue);
        var datos=(itemLiquidezInmediata[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
       //console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},
            minValue: 0
          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartLiquidezInmediata'));
       chart.draw(data, options);
    }
    function drawChart3(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Liquidez General');
         for (var i=0;i < itemLiquidezGeneral.length;i++){
      // console.log(itemLiquidezGeneral[i].defaultValue);
        var datos=(itemLiquidezGeneral[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
            count: 30,
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartliquidezGeneral'));
       chart.draw(data, options);
    }
    function drawChart4(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Endeudamiento General');
         for (var i=0;i < itemEndeudamiento.length;i++){
      // console.log(itemEndeudamiento[i].defaultValue);
        var datos=(itemEndeudamiento[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartEndeudadmiento'));
       chart.draw(data, options);
    }
    function drawChart5(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Liquidez Corto plazo');
         for (var i=0;i < itemLiquidezCorto.length;i++){
      // console.log(itemLiquidezCorto[i].defaultValue);
        var datos=(itemLiquidezCorto[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartliquidezCorto'));
       chart.draw(data, options);
    }
     function drawChart6(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Relación de endeudamiento');
         for (var i=0;i < itemRelacion.length;i++){
      // console.log(itemRelacion[i].defaultValue);
        var datos=(itemRelacion[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartRelacion'));
       chart.draw(data, options);
    }
     function drawChart7(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Cash-flow');
         for (var i=0;i < itemCash.length;i++){
      // console.log(itemCash[i].defaultValue);
        var datos=(itemCash[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
       //console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartCash'));
       chart.draw(data, options);
    }
     function drawChart8(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Periodo medio de pago a acreedores comerciales');
         for (var i=0;i < itemProveedores.length;i++){
      // console.log(itemProveedores[i].defaultValue);
        var datos=(itemProveedores[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartProveedores'));
       chart.draw(data, options);
    }
     function drawChart9(){
        totales=[];
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Año');
        var j=2015;
        data.addColumn('number', 'Periodo medio de cobro');
         for (var i=0;i < itemPmc.length;i++){
      // console.log(itemPmc[i].defaultValue);
        var datos=(itemPmc[i].defaultValue);
        totales.push([new Date(j,11,31), parseFloat(datos)]);
        j++;
        }
      // console.log(totales)
        data.addRows(totales);
         var options = {
          title: '',
          is3D:true,
          legend: 'none',
          width: 300,
          height: 100,
          hAxis: {

             color: 'transparent',
            gridlines: {
             color: 'transparent'
             },

          },
          vAxis: {
           color: 'transparent',
           textPosition:'none',
            showValue:false,
            gridlines: {
            color: 'transparent'},

          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chartPmc'));
       chart.draw(data, options);
    }
        /*]]>*/
        </script>
        <script type="text/javascript">
            /*<![CDATA[*/
         function drawChart11(){
        totales=[ ['Ratio', '%']];

         for (var i=0;i < itemIgor.length;i++){
            totales.push([itemIgor[i].id,parseFloat(itemIgor[i].innerText.replace(",","."))*100]);
        }
        var data = google.visualization.arrayToDataTable(totales);
        var options = {
          title: 'Estructura de los ingresos de gestión ordinaria (IGOR)',
          is3D: true,
          width:400,
        };
        var chart = new google.visualization.PieChart(document.getElementById('chartIgor'));
       chart.draw(data, options);
    }
     function drawChart12(){
        totales=[['Ratio', '% value']];
         for (var i=0;i < itemGgor.length;i++){
           totales.push([itemGgor[i].id,parseFloat(itemGgor[i].innerText.replace(",","."))*100]);
        }
        //console.log(totales);
        var data = google.visualization.arrayToDataTable(totales);

        var options = {
          title: 'Estructura de los gastos de gestión ordinaria (GGOR)',
          is3D: true,
          width:400,
        };
        var chart = new google.visualization.PieChart(document.getElementById('chartGgor'));
       chart.draw(data, options);
    }
             /*]]>*/
        </script>
    </body>
</html>
